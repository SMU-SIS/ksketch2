<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

*This Source Code Form is subject to the terms of the
*Mozilla Public License, v. 2.0. If a copy of the MPL was
*not distributed with this file, You can obtain one at
*http://mozilla.org/MPL/2.0/.
-->
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 skinClass="sg.edu.smu.ksketch2.canvas.components.buttons.KSketch_Canvas_Button_Skin"
		 initialize="_initSkin()"
		 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.events.StateChangeEvent;
			
			import spark.components.Image;
			
			import sg.edu.smu.ksketch2.KSketch2;
			import sg.edu.smu.ksketch2.KSketchAssets;
			import sg.edu.smu.ksketch2.canvas.components.timebar.KSketch_TimeControl;
			import sg.edu.smu.ksketch2.canvas.controls.KInteractionControl;
			
			public static const LEFT:int = -1;
			public static const RIGHT:int = 1;

			private var _KSketch:KSketch2;
			private var _interactionControl:KInteractionControl;
			private var _type:int;
			private var _timeControl:KSketch_TimeControl;
			
			private var _firstDelay:Number = 300; // Initial delay (in msecs) for auto-changing minutes.
			private var _timer:Timer = new Timer(_firstDelay,0); // Timer object for auto-changing minutes.
			private var _isPrevious:Boolean = false;

			public function init(KSketchInstance:KSketch2, interactionControl:KInteractionControl,
								timeControl:KSketch_TimeControl, type:int):void
			{
				_KSketch = KSketchInstance;
				_interactionControl = interactionControl;
				_timeControl = timeControl;
				_type = type;
			}
			
			private function _initSkin():void
			{
				var textureControl:Image = (skin as KSketch_Canvas_Button_Skin).texture;
				skin.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE, _onStateChange);
				
				if(_type == LEFT)
					textureControl.source = KSketchAssets.texture_frame_previous;
				else
					textureControl.source = KSketchAssets.texture_frame_next;	
			}
			
			private function _onStateChange(event:StateChangeEvent):void
			{
				var textureControl:Image = (skin as KSketch_Canvas_Button_Skin).texture;
				
				if(_type == LEFT)
				{
					if(event.newState == "up")
						textureControl.source = KSketchAssets.texture_frame_previous;
					else
						textureControl.source = KSketchAssets.texture_frame_previous_down;
				}
				else
				{
					if(event.newState == "up")
						textureControl.source = KSketchAssets.texture_frame_next;	
					else
						textureControl.source = KSketchAssets.texture_frame_next_down;
				}
			}
		]]>
	</fx:Script>
</s:Button>