<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

*This Source Code Form is subject to the terms of the
*Mozilla Public License, v. 2.0. If a copy of the MPL was
*not distributed with this file, You can obtain one at
*http://mozilla.org/MPL/2.0/.
-->
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" backgroundAlpha="0"
						   initialize="init()">
	<fx:Script>
		<![CDATA[
		import mx.core.FlexGlobals;
		import mx.events.FlexEvent;

		import sg.edu.smu.ksketch2.KSketch_Config;

		import spark.components.Application;

		import sg.edu.smu.ksketch2.KSketchStyles;
		import sg.edu.smu.ksketch2.canvas.components.view.KSketch_HomeView;

		public static const CANVASNOTICE_FAILED_SYNC:String = "FAILEDSYNC";
		public static const CANVASNOTICE_FAILED_SKETCH:String = "FAILEDSKETCH";
		public static const CANVASNOTICE_FAILED_LOGIN:String = "FAILEDLOGIN";
		public static const CANVASNOTICE_EXPIRED_SESSION:String = "EXPIREDSESSION";
		private var _homeView:KSketch_HomeView;
		public var _parent:String;

		override public function open(owner:DisplayObjectContainer, modal:Boolean = false):void {
			init();

			_homeView = owner as KSketch_HomeView;
			super.open(owner, modal);
		}

		override public function close(commit:Boolean = false, data:* = null):void {
			super.close(commit, data);
			(FlexGlobals.topLevelApplication as Application).setFocus();
		}
		public function login(commit:Boolean = false, data:* = null):void {
			super.close(commit, data);
			(FlexGlobals.topLevelApplication as Application).setFocus();
			_homeView.navigateToScreen('RELOGIN');
		}
		private function init():void {
			notificationLabel.setStyle("fontSize", KSketchStyles.DIALOG_BUTTON_NORMAL_FONT);
			okButton.setStyle("fontSize", KSketchStyles.DIALOG_BUTTON_SIZE);

			this.removeEventListener(FlexEvent.INITIALIZE, init);
			okButton.label = "Ok";
			yesButton.setVisible(false);
			if (_parent == CANVASNOTICE_FAILED_SYNC)
				notificationLabel.text = "Connection lost. Check your network connection or contact the K-Sketch team at " + KSketch_Config.email + ".\nYour changes will be saved when the connection is re-established.";
			else if (_parent == CANVASNOTICE_FAILED_SKETCH)
				notificationLabel.text = "Unable to display sketch. Check your network connection or\ncontact the K-Sketch team at " + KSketch_Config.email;
			else if (_parent == CANVASNOTICE_FAILED_LOGIN)
				notificationLabel.text = "Unable to login. Check your network connection or\ncontact the K-Sketch team at " + KSketch_Config.email;
			else if (_parent == CANVASNOTICE_EXPIRED_SESSION) {
				notificationLabel.text = "Your K-Sketch session has expired. Please login to retrieve your sketches. Do you want to login now?";
				okButton.label = "No";
				yesButton.setVisible(true);
			}
			notificationLabel.setStyle('textAlign', 'center');
		}
		]]>
	</fx:Script>
	<s:filters>
		<s:DropShadowFilter 
			color="{KSketchStyles.CANVAS_SHADOW_COLOR}" angle="{KSketchStyles.CANVAS_SHADOW_ANGLE}"
			alpha="{KSketchStyles.CANVAS_SHADOW_ALPHA * 0.5}"
			strength="{KSketchStyles.CANVAS_SHADOW_STRENGTH}"
			blurX="{KSketchStyles.CANVAS_SHADOW_X_DISTANCE * 0.75}"
			blurY="{KSketchStyles.CANVAS_SHADOW_Y_DISTANCE * 0.75}"/>
	</s:filters>
	<s:Rect width="100%" height="100%" radiusX="{KSketchStyles.MENU_CORNER_RADIUS}" radiusY="{KSketchStyles.MENU_CORNER_RADIUS}">
		<s:fill>
			<s:SolidColor color="{KSketchStyles.MENU_BACKGROUND_COLOR}"/>
		</s:fill>
	</s:Rect>
	<s:Group width="50%">
		<s:layout>
			<s:VerticalLayout gap="{KSketchStyles.DIALOG_PADDING_20}" paddingLeft="{KSketchStyles.DIALOG_PADDING_5}" paddingRight="{KSketchStyles.DIALOG_PADDING_5}" paddingTop="{KSketchStyles.DIALOG_PADDING_20}" paddingBottom="{KSketchStyles.DIALOG_PADDING_20}" verticalAlign="middle" horizontalAlign="center"/>
		</s:layout>
		<s:Label id="notificationLabel"/>
		<s:Group width="100%">
			<s:layout>
				<s:HorizontalLayout paddingLeft="{KSketchStyles.DIALOG_PADDING_10}" horizontalAlign="right"/>
			</s:layout>
			<s:Button id="yesButton" label = "Yes" click="login()" />
			<s:Button id="okButton" label="OK" click="close()"/>
		</s:Group>
		
	</s:Group>
</s:SkinnablePopUpContainer>