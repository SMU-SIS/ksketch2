<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

*This Source Code Form is subject to the terms of the
*Mozilla Public License, v. 2.0. If a copy of the MPL was
*not distributed with this file, You can obtain one at
*http://mozilla.org/MPL/2.0/.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" xmlns:buttons="sg.edu.smu.ksketch2.canvas.components.buttons.*"
		 >
	<fx:Script>
		<![CDATA[
			import sg.edu.smu.ksketch2.events.KTimeChangedEvent;
			
			private var _timeControl:KSketch_TimeControl;
			private var _labelPool:Vector.<KSketch_TimeLabel>;
			private var _lastPartition:Group;
			
			
			private static const MAX_DIVISIONS:int = 20;
			
			public function init(timeControl:KSketch_TimeControl):void
			{
				_timeControl = timeControl;
				timeControl.addEventListener(KTimeChangedEvent.EVENT_MAX_TIME_CHANGED, _updateLabels);
				
				_lastPartition = new Group();
				_labelPool = new Vector.<KSketch_TimeLabel>();
				
				for(var i:int = 0; i<MAX_DIVISIONS; i++)
				{
					_labelPool.push(new KSketch_TimeLabel());
				}
			}
			
			private function _toggleLabelVisibility():void
			{
				labels.visible = onButton.on;
			}
			
			private function _updateLabels(event:Event):void
			{
				var maxTime:Number = _timeControl.maximum/1000;
				var timePerDivision:Number = 0.95;
				var power:Number = 0;
				var numDivisionsRequired:int = Math.ceil(maxTime/timePerDivision);
				
				while(numDivisionsRequired > MAX_DIVISIONS)
				{
					power += 1;
					timePerDivision = power * 5;
					numDivisionsRequired = Math.ceil(maxTime/timePerDivision);
				}
				
				if(numDivisionsRequired == labels.numElements)
					return;
				
				labels.removeAllElements();
				
				var last:Number = numDivisionsRequired - 1;
				
				for(var i:int = 0; i < numDivisionsRequired; i++)
				{
					if(i != last)
					{
						var myLabel:KSketch_TimeLabel = _labelPool[i];
						myLabel.timeLabelText.text = (Math.ceil((i+1)*timePerDivision)).toString()+"s";
						labels.addElement(myLabel);
					}
					else
					{
						labels.addElement(_lastPartition);
						
						if(timePerDivision > 1)
							_lastPartition.width = _timeControl.timeToX(_timeControl.maximum) - _timeControl.timeToX(i*timePerDivision*1000);
						else
							_lastPartition.width = _timeControl.timeToX(_timeControl.maximum) - _timeControl.timeToX(i*1000);
					}
				}
			}
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%" id="timeLabels">
		<s:Group height="100%">
			<s:layout>
				<s:VerticalLayout verticalAlign="middle"/>
			</s:layout>
			<buttons:KSketch_OnOff_Toggle id="onButton" click="_toggleLabelVisibility()"/>
		</s:Group>
		<s:Group id="labels" width="100%" height="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" gap="0"/>
			</s:layout>
		</s:Group>
	</s:Group>
</s:Group>
