<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" backgroundAlpha="0">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import sg.edu.smu.ksketch2.canvas.KSketch_CanvasView;
			import sg.edu.smu.ksketch2.canvas.KSketch_CanvasView_Preferences;

			private var _canvasView:KSketch_CanvasView;
			private var _menu:KTouchCornerMenu;
			
			public function init(canvasView:KSketch_CanvasView, menu:KTouchCornerMenu):void
			{
				_canvasView = canvasView;
				_menu = menu;
			}
			
			override public function open(owner:DisplayObjectContainer, modal:Boolean=false):void
			{
				super.open(owner, modal);
				
				switch(KSketch_CanvasView_Preferences.menuOpen)
				{
					case KSketch_CanvasView_Preferences.OPEN:
						menuOpen.selected = true;
						break;
					default:
						menuOpen.selected = false;
				}
			}
			
			public function applyPreferences():void
			{
				switch(KSketch_CanvasView_Preferences.timebarPosition)
				{
					case KSketch_CanvasView_Preferences.POS_BOTTOM:
						_timebarBottom();
						break;
					default:
						_timebarTop();
				}
				
				switch(KSketch_CanvasView_Preferences.menuPosition)
				{
					case KSketch_CanvasView_Preferences.POS_LEFT:
						_menuLeft();
						break;
					case KSketch_CanvasView_Preferences.POS_TOP:
						_menuTop();
					default:
						_menuRight();
				}
				
				switch(KSketch_CanvasView_Preferences.menuOpen)
				{
					case KSketch_CanvasView_Preferences.OPEN:
						menuOpen.selected = true;
						_menuOpen(true);
						break;
					default:
						menuOpen.selected = false;
						_menuOpen(false);
				}
			}
			
			private function _timebarTop():void
			{
				if(_canvasView.mainCanvas.getElementIndex(_canvasView.timebar_component) <= _canvasView.mainCanvas.getElementIndex(_canvasView.canvas_component))
					return;

				_canvasView.mainCanvas.swapElements(_canvasView.timebar_component, _canvasView.canvas_component);
				_canvasView.timebar_component.addEventListener(FlexEvent.UPDATE_COMPLETE, _updateCanvas);
				KSketch_CanvasView_Preferences.timebarPosition = KSketch_CanvasView_Preferences.POS_TOP;
			}
			
			private function _timebarBottom():void
			{
				if(_canvasView.mainCanvas.getElementIndex(_canvasView.timebar_component) >= _canvasView.mainCanvas.getElementIndex(_canvasView.canvas_component))
					return;
				
				_canvasView.mainCanvas.swapElements(_canvasView.timebar_component, _canvasView.canvas_component);
				_canvasView.timebar_component.addEventListener(FlexEvent.UPDATE_COMPLETE, _updateCanvas);
				KSketch_CanvasView_Preferences.timebarPosition = KSketch_CanvasView_Preferences.POS_BOTTOM;
			}
			
			private function _updateCanvas(event:FlexEvent):void
			{
				_canvasView.timeControl.updatePosition();
				_canvasView.timebar_component.removeEventListener(FlexEvent.UPDATE_COMPLETE, _updateCanvas);
			}
			
			private function _menuTop():void
			{
				var topPosition:Point = _canvasView.canvas_component.localToGlobal(new Point(0,0));
				_menu.x = 10;
				_menu.y = topPosition.y + 10;
				_menu.horizontalMenu();
				KSketch_CanvasView_Preferences.menuPosition = KSketch_CanvasView_Preferences.POS_TOP;
			}
			
			private function _menuLeft():void
			{
				var topPosition:Point = _canvasView.canvas_component.localToGlobal(new Point(0,0));
				_menu.x= 10;
				_menu.y= topPosition.y + 10;
				_menu.verticalMenu();
				KSketch_CanvasView_Preferences.menuPosition = KSketch_CanvasView_Preferences.POS_LEFT;
			}
		
			private function _menuRight():void
			{
				var topPosition:Point = _canvasView.canvas_component.localToGlobal(new Point(0,0));
				_menu.x= _canvasView.width - 70;		
				_menu.y= topPosition.y + 10;
				_menu.verticalMenu();
				KSketch_CanvasView_Preferences.menuPosition = KSketch_CanvasView_Preferences.POS_RIGHT;				
			}
			
			private function _menuOpen(value:Boolean):void
			{
				if(value)
				{
					_menu.open(_canvasView);
					KSketch_CanvasView_Preferences.menuOpen = KSketch_CanvasView_Preferences.OPEN;
				}
				else
					KSketch_CanvasView_Preferences.menuOpen = KSketch_CanvasView_Preferences.CLOSE;
			}
		]]>
	</fx:Script>
	<s:filters>
		<s:DropShadowFilter color="0xA4A4A4" distance="2" blurX="8" blurY="8" strength="2" angle="90"/>
	</s:filters>
	<s:Rect width="100%" height="100%" radiusX="5" radiusY="5">
		<s:fill>
			<s:SolidColor color="0xE7E7E7"/>
		</s:fill>
	</s:Rect>
	<s:Group>
		<s:layout>
			<s:VerticalLayout gap="2" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"
							  horizontalAlign="left" verticalAlign="middle"/>
		</s:layout>
		<s:Label text="Options" fontSize="32"/>
		<s:Line alpha="{KSketch_CanvasView.CANVAS_DIVIDER_BLEND}" width="90%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="{KSketch_CanvasView.CANVAS_BUTTON_COLOR}"/>
			</s:stroke>
		</s:Line>			
		<s:Group>
			<s:layout>
				<s:VerticalLayout paddingLeft="5"/>
			</s:layout>
			<s:Label text="Timebar position" fontSize="24"/>
			<s:Group>
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Button label="Top" click="_timebarTop()"/>
				<s:Button label="Bottom" click="_timebarBottom()"/>
			</s:Group>
		</s:Group>
		<s:Line alpha="{KSketch_CanvasView.CANVAS_DIVIDER_BLEND}" width="90%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="{KSketch_CanvasView.CANVAS_BUTTON_COLOR}"/>
			</s:stroke>
		</s:Line>			
		<s:Group>
			<s:layout>
				<s:VerticalLayout paddingLeft="5"/>
			</s:layout>
			<s:Label text="Menu position" fontSize="24"/>
			<s:Group>
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Button label="Top" click="_menuTop()"/>
				<s:Button label="Left" click="_menuLeft()"/>
				<s:Button label="Right" click="_menuRight()"/>
			</s:Group>
		</s:Group>
		<s:Line alpha="{KSketch_CanvasView.CANVAS_DIVIDER_BLEND}" width="90%">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="{KSketch_CanvasView.CANVAS_BUTTON_COLOR}"/>
			</s:stroke>
		</s:Line>			
		<s:Group>
			<s:layout>
				<s:HorizontalLayout paddingLeft="5" verticalAlign="middle"/>
			</s:layout>
			<s:Label text="Menu Auto Open" fontSize="24"/>
			<s:CheckBox id="menuOpen" click="_menuOpen(menuOpen.selected)"/>
		</s:Group>
		<s:Group width="100%">
			<s:layout>
				<s:VerticalLayout paddingLeft="5" horizontalAlign="right"/>
			</s:layout>
			<s:Button label="Close" click="close()"/>
		</s:Group>
	</s:Group>
</s:SkinnablePopUpContainer>
