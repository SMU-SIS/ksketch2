<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		alpha.disabled="0.5" creationComplete="_creationCompleteHandler()"
		width="40"
		height="{width}"
		>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("spark.components.Button")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			public static const POP_UP_MENU_BUTTON_GREY:uint = 0x626262;
			public static const POP_UP_MENU_BUTTON_THICKNESS:Number = 3;
			
			private function _creationCompleteHandler():void
			{
				switch(parent.name)
				{
					case "black":
						buttonColor = KTouchCornerMenu.BLACK_PEN_COLOR;
						break;
					case "red":
						buttonColor = KTouchCornerMenu.RED_PEN_COLOR;
						break;
					case "green":
						buttonColor = KTouchCornerMenu.GREEN_PEN_COLOR;
						break;
					case "blue":
						buttonColor = KTouchCornerMenu.BLUE_PEN_COLOR;
						break;
					case "pen":
						penColor = KTouchCornerMenu.BLACK_PEN_COLOR;
						break;
					case "eraser":
	
						iconGraphics.graphics.beginFill(POP_UP_MENU_BUTTON_GREY);
						iconGraphics.graphics.lineStyle(POP_UP_MENU_BUTTON_THICKNESS, POP_UP_MENU_BUTTON_GREY);
						iconGraphics.graphics.moveTo(0.35*width, 0.2*height);
						iconGraphics.graphics.lineTo(0.35*width, 0.5*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.5*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.2*height);
						iconGraphics.graphics.lineTo(0.35*width, 0.2*height);
						iconGraphics.graphics.endFill();
						
						iconGraphics.graphics.moveTo(0.35*width, 0.5*height);
						iconGraphics.graphics.lineTo(0.35*width, 0.8*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.8*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.5*height);
						
						backgroundColor.visible = false;
						
						break;
					case "new":
						
						iconGraphics.graphics.lineStyle(POP_UP_MENU_BUTTON_THICKNESS, POP_UP_MENU_BUTTON_GREY);
						iconGraphics.graphics.moveTo(0.25*width, 0.2*height);
						iconGraphics.graphics.lineTo(0.25*width, 0.8*height);
						iconGraphics.graphics.lineTo(0.75*width, 0.8*height);
						iconGraphics.graphics.lineTo(0.75*width, 0.3*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.2*height);
						iconGraphics.graphics.lineTo(0.25*width, 0.2*height);
						
						iconGraphics.graphics.moveTo(0.65*width, 0.2*height);
						iconGraphics.graphics.lineTo(0.65*width, 0.3*height);
						iconGraphics.graphics.lineTo(0.75*width, 0.3*height);
						backgroundColor.visible = false;
						
						break;
					case "camera":
						labelText = "C";
						break;
					case "gallery":
						labelText = "G";
						break;
					case "image":
						labelText = "I";
						break;
					case "zoomIn":
						labelText = "+";
						break;
					case "zoomOut":
						labelText = "-";
						break;
					case "modeI":
						labelText = "K";
						break;
					case "modeD":
						labelText = "P";
						break;
					case "modeDI":
						labelText = "PK";
						break;
					case "exit":
						iconGraphics.graphics.lineStyle(POP_UP_MENU_BUTTON_THICKNESS, POP_UP_MENU_BUTTON_GREY);
						iconGraphics.graphics.moveTo(0.35*width, 0.65*height);
						iconGraphics.graphics.lineTo(0.20*width, 0.5*height);
						iconGraphics.graphics.lineTo(0.35*width, 0.35*height);
						iconGraphics.graphics.moveTo(0.20*width, 0.5*height);
						iconGraphics.graphics.lineTo(0.6*width, 0.5*height);

						iconGraphics.graphics.moveTo(0.50*width, 0.4*height);
						iconGraphics.graphics.lineTo(0.50*width, 0.25*height);
						iconGraphics.graphics.lineTo(0.80*width, 0.25*height);
						iconGraphics.graphics.lineTo(0.80*width, 0.75*height);
						iconGraphics.graphics.lineTo(0.50*width, 0.75*height);
						iconGraphics.graphics.lineTo(0.50*width, 0.6*height);
						
						backgroundColor.visible = false;
				}
			}
			
			override public function setCurrentState(stateName:String, playTransition:Boolean=true):void
			{
				if(stateName == "selected")
				{
					super.setCurrentState("down", playTransition);
					if(parent && parent.name == "pen")
						backgroundColor.visible = true;
					else
						backgroundColor.visible = false;
				}
				else if(stateName == "unselected")
				{
					super.setCurrentState("up", playTransition);
					backgroundColor.visible = false;
				}
				else if(parent)
				{
					switch(parent.name)
					{
						case "black":
						case "red":
						case "green":
						case "blue":
						case "pen":
						case "eraser":
							break;
						default:
							super.setCurrentState(stateName, playTransition);
					}
				}					
			}

			public function set penColor(value:uint):void
			{
				buttonFill.color = value;
				iconGraphics.graphics.clear();
				iconGraphics.graphics.lineStyle(POP_UP_MENU_BUTTON_THICKNESS, POP_UP_MENU_BUTTON_GREY);
				iconGraphics.graphics.moveTo(0.45*width, 0.2*height);
				iconGraphics.graphics.lineTo(0.45*width, 0.65*height);
				iconGraphics.graphics.lineTo(0.50*width, 0.85*height);
				iconGraphics.graphics.lineTo(0.55*width, 0.65*height);
				iconGraphics.graphics.lineTo(0.55*width, 0.2*height);
				iconGraphics.graphics.lineTo(0.45*width, 0.2*height);
			}
			
			private function set labelText(value:String):void
			{
				backgroundColor.visible = false;
				labelDisplay.visible = true;
				labelDisplay.text = value;
			}
			
			private function set buttonColor(value:uint):void
			{
				labelDisplay.visible = false;
				backgroundColor.visible = true;
				buttonFill.color = value;
			}			
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		.PopUpMenuButtonSkin {
			fontFamily: Helvetica, Roboto "_sans";
			color: Black;
			fontSize: 12;
		}
	</fx:Style>
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="down" />
		<s:State name="over" />
		<s:State name="up" />
	</s:states>
	
	<!-- layer 2: fill -->
	<s:Rect left="1" right="1" top="1" bottom="1" includeIn="up">
		<s:fill>
			<s:SolidColor color="0xE7E7E7"/>
		</s:fill>
	</s:Rect>
	
	<s:Rect left="1" right="1" top="1" bottom="1" radiusX="3" radiusY="3" includeIn="down">
		<s:fill>
			<s:SolidColor color="0xc9ddf3"/>
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="100%">
		<s:Rect left="1" right="1" top="1" bottom="1" id="backgroundColor">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" id="buttonFill"/>
			</s:fill>
		</s:Rect>
		<s:Group width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout paddingLeft="3" paddingRight="3" paddingTop="3" paddingBottom="3" verticalAlign="middle" horizontalAlign="center"/>
			</s:layout>
			<s:Label id="labelDisplay" fontSize="32" textAlign="center"/>
		</s:Group>
		<s:Group id="iconGraphics"/>
	</s:Group>
</s:Skin>
