<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

*This Source Code Form is subject to the terms of the
*Mozilla Public License, v. 2.0. If a copy of the MPL was
*not distributed with this file, You can obtain one at
*http://mozilla.org/MPL/2.0/.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script source="DebuggerUtilities.as"/>
	<fx:Script source="DebuggerInfoGenerator.as"/>
	
	<fx:Script>
		<![CDATA[
			import sg.edu.smu.ksketch.components.DebugTreeRenderer;
			import sg.edu.smu.ksketch.event.KModelEvent;
			import sg.edu.smu.ksketch.event.KObjectEvent;
			import sg.edu.smu.ksketch.event.KSelectionChangedEvent;
			import sg.edu.smu.ksketch.event.KTimeChangedEvent;
			import sg.edu.smu.ksketch.interactor.KSelection;
			import sg.edu.smu.ksketch.io.KFileParser;
			import sg.edu.smu.ksketch.model.KGroup;
			import sg.edu.smu.ksketch.model.KObject;
			import sg.edu.smu.ksketch.model.KStroke;
			import sg.edu.smu.ksketch.model.implementations.KParentKeyframe;
			import sg.edu.smu.ksketch.operation.KModelFacade;
			import sg.edu.smu.ksketch.utilities.IIterator;
			import sg.edu.smu.ksketch.utilities.KAppState;
			import sg.edu.smu.ksketch.utilities.KModelObjectList;
			
			private var _facade:KModelFacade;
			private var _appState:KAppState;
			private var _activeTab:Group;
			private var _activeObject:KObject;
			private var _treeList:XML
			
			public function initNewDebuggerCanvas(facade:KModelFacade, appState:KAppState):void
			{
				objectModelTree.itemRenderer = new ClassFactory(sg.edu.smu.ksketch.components.DebugTreeRenderer);;
				
				_facade = facade;
				_appState = appState;
				_refreshDebugger();
				_setAppTimeSlider();

				_facade.addEventListener(KObjectEvent.EVENT_OBJECT_ADDED, _refreshDebugger, false, 1);
				_facade.addEventListener(KObjectEvent.EVENT_OBJECT_REMOVED, _refreshDebugger, false, 1);
				//_facade.addEventListener(KGroupUngroupEvent.EVENT_GROUP, _refreshDebugger, false, 1);
				//_facade.addEventListener(KGroupUngroupEvent.EVENT_UNGROUP, _refreshDebugger, false, 1);
				_appState.addEventListener(KTimeChangedEvent.TIME_CHANGED, _refreshDebugger, false, 1);
				
				_appState.addEventListener(KSelectionChangedEvent.EVENT_SELECTION_CHANGED, selectionChangedEventHandler, false, 1);
				
			}
			
			private function _refreshDebugger(event:Event = null):void
			{
				_treeList = <root/>;
				objectModelTree.dataProvider = _treeList;
				var it:IIterator = _facade.root.directChildIterator(_appState.time);
				while(it.hasNext())
					_treeList.appendChild(objectToXML(it.next()));
				highlightUserSelection(null, _appState.selection);
				
				_setAppTimeSlider();
			}
			
			private function _setAppTimeSlider():void
			{
				var min:Number = 0;
				var max:Number = _appState.maxTime;
				objectSlider.minimum = 0;
				objectSlider.maximum = max;
				objectSlider.snapInterval = KAppState.ANIMATION_INTERVAL;
				objectSlider.value = _appState.time;
			}
			
			private function selectionChangedEventHandler(event:KSelectionChangedEvent):void
			{
				highlightUserSelection(event.oldSelection, event.newSelection);
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="5" paddingRight="5"/>
	</s:layout>
	
	<mx:Tree width="100%" height="40%" borderColor="0x000000" change="_updateTabbedDisplay()" id="objectModelTree" allowMultipleSelection="true"
			  labelFunction="_treeLabelFunction"/>
	
	<s:TabBar id="viewSelectionTab" width="100%" change="_updateTabbedDisplay()" selectedItem="null">
		<s:ArrayCollection>
			<fx:String>Properties</fx:String>
			<fx:String>Geometry</fx:String>
			<fx:String>Parent Keys</fx:String>
			<!--<fx:String>Transform Keys</fx:String>-->
		</s:ArrayCollection>
	</s:TabBar>
	
	<s:Label id="idLabel" width="100%"/>
	
	<s:Group width="100%" height="60%" id="tabbedDisplay">
		<s:Group id="propertiesTab" visible="false" width="100%">
			<s:layout>
				<s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"/>
			</s:layout>
			
			<s:HSlider id="objectSlider" width="100%" change="_setMatrixTexts(objectSlider.value)"/>
			<s:Label text="Slider Time: {objectSlider.value}"/>
	
			<s:Group width="100%" id="fullMatrixField">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label text="Matrix:"/>
				<mx:Text id="fullMatrixText" width="90%"/>
			</s:Group>
			
			<s:Group width="100%" id="positionMatrixField">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label text="Position Matrix:"/>
				<mx:Text id="positionMatrixText" width="90%"/>
			</s:Group>
			
			<s:Group width="100%" id="fullPathMatrixField">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label text="Full Path Matrix:"/>
				<mx:Text id="fullPathMatrixText" width="90%"/>
			</s:Group>
			
			<s:Group width="100%" id="parentNodeField">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label text="Current Parent's ID:"/>
				<mx:Text id="currentParentIDText"/>
			</s:Group>
		</s:Group>
		
		<s:Group id="geometryTab" visible="false" width="100%">
			<mx:Text id="geometricProperties" width="90%" height="100%"/>
		</s:Group>
		
		<s:Group id="parentKeyTab" visible="false" width="100%" height="100%">
			<mx:AdvancedDataGrid width="100%" height="100%" sortExpertMode="true" id="parentKeyInfo">
				<mx:columns>
					<mx:AdvancedDataGridColumn dataField="Key Time"/>
					<mx:AdvancedDataGridColumn dataField="Parent ID"/>
				</mx:columns>
			</mx:AdvancedDataGrid>
		</s:Group>
		
		<s:Group id="transformKeysTab" visible="false">
			<mx:Text text="keys"/>
		</s:Group>
	</s:Group>
</s:Group>