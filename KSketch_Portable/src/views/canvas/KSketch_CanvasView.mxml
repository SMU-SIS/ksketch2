<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

*This Source Code Form is subject to the terms of the
*Mozilla Public License, v. 2.0. If a copy of the MPL was
*not distributed with this file, You can obtain one at
*http://mozilla.org/MPL/2.0/.
-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="HomeView" actionBarVisible="false" xmlns:components="views.canvas.components.*" xmlns:buttondrawer="views.canvas.components.buttondrawer.*" xmlns:view="sg.edu.smu.ksketch2.view.*"
	    creationComplete="initCanvas()"
		xmlns:transformWidget="views.canvas.components.transformWidget.*"
		xmlns:widgets="sg.edu.smu.ksketch2.controls.widgets.*"
		xmlns:timeBar="views.canvas.components.timeBar.*"
		destructionPolicy="never"
		add="_addHandler(event);" xmlns:utils="starling.utils.*" 
		>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import sg.edu.smu.ksketch2.KSketch2;
			
			import views.canvas.components.timeBar.KMobileTimeTickControl;
			import views.canvas.interactioncontrol.KMobileInteractionControl;
			import views.canvas.interactors.KCanvasInteractorManager;
			import views.canvas.interactors.KTouchContextMenuInteractor;
			import views.canvas.interactors.KWidgetInteractorManager;
			
			private var _KSketch:KSketch2;
			private var _interactionControl:KMobileInteractionControl;
			
			private var _transitionHelper:KWidgetInteractorManager;
			private var _selectionHelper:KCanvasInteractorManager;
			private var _contextMenuHelper:KTouchContextMenuInteractor;
			private var _timeTickControl:KMobileTimeTickControl;
			
			private var _newObjType:uint = 0;
			
			//We probably need a load and save handler in this canvas view
			//The xml can be passed through a data handler and the load handler will access it though {data}
			public function initCanvas():void
			{
				_KSketch = new KSketch2();
				_interactionControl = new KMobileInteractionControl(_KSketch, timeControl);
				
				currentTimeLabel.init(_KSketch, timeControl, KTimeLabel.LABEL_CURRENT_TIME);
				//maxTimeLabel.init(_KSketch, timeControl, KTimeLabel.LABEL_MAX_TIME);
				
				modelDisplay.init(_KSketch);
				timeControl.init(_KSketch);
				
				playButton.init(timeControl);
				_transitionHelper = new KWidgetInteractorManager(_KSketch, _interactionControl, widget, modelDisplay);
				_selectionHelper = new KCanvasInteractorManager(_KSketch, _interactionControl, canvas_region, modelDisplay);
				_contextMenuHelper = new KTouchContextMenuInteractor(widget);
				_timeTickControl = new KMobileTimeTickControl(timeControl, _interactionControl);
				_interactionControl.reset();
			}
			
			private function _addHandler(e:FlexEvent):void
			{
				_addObjHandler();
			}
			
			private function _menuBtnHandler():void
			{
				navigator.addEventListener("addImgToScn", _addImgHandler);
				navigator.pushView(views.canvas.Menu, _interactionControl);
			}
			
			private function _addImgHandler(e:Event):void
			{
				_removeMenuBtnHandler();
				_newObjType = 1;
			}
			
			private function _removeMenuBtnHandler():void
			{
				navigator.removeEventListener("addImgToScn", _addImgHandler);
			}
			
			private function _addObjHandler():void
			{
				if(_newObjType == 1)
				{
					//Add image
					var myImg:Loader = new Loader();
					
					myImg.load(new URLRequest(navigator.poppedViewReturnedObject.object as String));
					myImg.contentLoaderInfo.addEventListener(Event.COMPLETE, _imgLoadedHandler);
					_newObjType = 0;
				}
			}
			
			private function _imgLoadedHandler(e:Event):void
			{				
				e.target.removeEventListener(Event.COMPLETE, _imgLoadedHandler);
				_KSketch.object_Add_Image((e.target.content as Bitmap).bitmapData, _KSketch.time);
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>
	
	<s:Group width="100%" height="100%">
		<!-- For show, all the visual elements that the user wont be able to "touch"-->
		<s:Group width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
			</s:layout>
			<s:Group id="drawing_stage" height="95%" width="{drawing_stage.height/9*16}">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0xFFFFFF"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="0xE6E6E6" weight="1.5"/>
					</s:stroke>
				</s:Rect>
				<!-- The model display displays the objects in the model -->
				<view:KModelDisplay id="modelDisplay" scaleX="{drawing_stage.width/KSketch2.CANONICAL_WIDTH}"
									scaleY="{drawing_stage.height/KSketch2.CANONICAL_HEIGHT}"/>
				<s:Group width="100%">
					<s:layout>
						<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
					</s:layout>
					<s:Label id="feedbackLeft"/>
				</s:Group>
			</s:Group> 
		</s:Group>
		
		<!-- Things inside this group really dispatches gesture events-->
		<s:Group width="100%" height="100%">
			<s:Group id="canvas_region" width="100%" height="100%">
				<s:Rect width="100%" height="100%" alpha="0">
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<transformWidget:TouchWidgetTemplate id="widget" visible="false"/>
		</s:Group>
	</s:Group>
	
	<s:Group id="timebar_region" width="100%" height="60">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xD8D8D8"/>
			</s:fill>

			<s:filters>
				<s:DropShadowFilter strength="0.3" angle="270" blurY="2" distance="1.5"/>
			</s:filters>
		</s:Rect>
		<s:Group width="100%" height="100%">
			<s:layout >
				<s:HorizontalLayout gap="0" verticalAlign="middle" paddingLeft="5"/>
			</s:layout>
			<timeBar:Touch_Play_Button id="playButton"/>
			<timeBar:KTimeLabel id="currentTimeLabel"/>
			<s:Group width="100%" height="100%">
				<s:layout>
					<s:VerticalLayout gap="3" verticalAlign="middle" horizontalAlign="center" paddingLeft="5" paddingRight="5"/>
				</s:layout>
				<timeBar:KTouchTimeControl id="timeControl"/>
			</s:Group>
			<s:BorderContainer width="130" height="40"/>
			<timeBar:Touch_Menu_Button id="menuButton"/>
		</s:Group>
		
		<s:Group width="100%">
			<s:layout>
				<s:HorizontalLayout gap="0"/>
			</s:layout>
			<s:Group width="50" height="60" alpha="0" click="playButton.playToggle()">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<s:Group width="100%"/>
			<s:Group width="50" height="60" alpha="0" click="_menuBtnHandler()">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
			</s:Group>
		</s:Group>
	</s:Group>
</s:View>