<?xml version="1.0" encoding="utf-8"?>
<!--
*Copyright 2010-2012 Singapore Management University
*Developed under a grant from the Singapore-MIT GAMBIT Game Lab

-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import sg.edu.smu.ksketch.operation.KTransformMgr;
			
			public static const SELECTED_OVERVIEW_COLORS:Array = [0x000000, 0xE6E8ED];
			public static const UNSELECTED_OVERVIEW_COLORS:Array = [0x8D9095,0x6D6E70];
			public static const ROTATE_COLORS:Array = [0xFFFFFF,0x00FF00];
			public static const SCALE_COLORS:Array = [0xFFFFFF, 0xFF0000];
			public static const TRANSLATE_COLORS:Array = [0xFFFFFF,0x0000FF];
			
			private var _leftMarker:Marker;
			private var _rightMarker:Marker;
			public var selected:Boolean;
			public var colorSet:Array;
			public var type:int;
			
			public function initBar(left:Marker, right:Marker):void
			{
				_leftMarker = left;
				if(_leftMarker.selected)
					selected = true;
				_rightMarker = right;
				if(_rightMarker.selected)
					selected = true;
				_leftMarker.activityBars.push(this);
				_rightMarker.activityBars.push(this);
				
				switch(leftMarker.type)
				{
					case TimeWidget.OVERVIEW:
						colorSet = [];
						bar.height = 7;
						break;
					case TimeWidget.TRANSLATE:
						colorSet = TRANSLATE_COLORS
						break;
					case TimeWidget.ROTATE:
						colorSet = ROTATE_COLORS
						break;
					case TimeWidget.SCALE:
						colorSet = SCALE_COLORS
						break;
				}
			}
			
			public function renderBar():void
			{
				//Compute xpos of this bar and its width
				x = _leftMarker.x+_leftMarker.width*0.75 - 2;
				width = _rightMarker.x +_rightMarker.width*0.25 - x;
				
				if(_leftMarker.type == TimeWidget.OVERVIEW)
				{
					if(_leftMarker.selected)
						colorSet = SELECTED_OVERVIEW_COLORS;
					else
						colorSet = UNSELECTED_OVERVIEW_COLORS;
				}
				else
				{
					if(!_rightMarker.hasTransform)
						bar.alpha = 0.3;
					else
						bar.alpha = 1.0;
				}
				barOutline.color = colorSet[0];
				barFill.color = colorSet[1];
			}

			public function get leftMarker():Marker
			{
				return _leftMarker;
			}

			public function set leftMarker(value:Marker):void
			{
				_leftMarker = value;
			}

			public function get rightMarker():Marker
			{
				return _rightMarker;
			}

			public function set rightMarker(value:Marker):void
			{
				_rightMarker = value;
			}
		]]>
	</fx:Script>
	
	<s:Rect height="19" width="100%" id="bar">                           
		<s:stroke>
			<s:SolidColorStroke color="0x000000" weight="0.5" id="barOutline"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor color="0x000000" alpha="1" id="barFill"/>
		</s:fill>
	</s:Rect>
</s:Group>
